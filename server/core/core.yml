template: Hello, %s!
defaultName: Stranger

# use the simple server factory if you only want to run on a single port
#server:
# type: simple
# connector:
# type: http
# port: 8080

server:
# softNofileLimit: 1000
# hardNofileLimit: 1000
  applicationConnectors:
    - type: http
      port: 9090
    - type: https
      port: 9443
      keyStorePath: example.keystore
      keyStorePassword: example
      validateCerts: false
# this requires the npn-boot library on the JVM's boot classpath
# - type: spdy3
# port: 8445
# keyStorePath: example.keystore
# keyStorePassword: example
# validateCerts: false
  adminConnectors:
    - type: http
      port: 9081
    - type: https
      port: 9444
      keyStorePath: example.keystore
      keyStorePassword: example
      validateCerts: false

# Logging settings.
logging:

  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level: INFO

  # Logger-specific levels.
  loggers:

    # Sets the level for 'com.example.app' to DEBUG.
    com.example.app: DEBUG

    org.hibernate.SQL: ALL

  appenders:
    - type: console

database:
  # the name of your JDBC driver
  driverClass: org.postgresql.Driver

  # the username
  user: whatshappening

  # the password
  password: whatshappening

  # the JDBC URL
  url: jdbc:postgresql://localhost:5432/whatshappening

  # any properties specific to your JDBC driver:
  properties:
    charSet: UTF-8

  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s

  # the SQL query to run when validating a connection's liveness
  validationQuery: "/* MyService Health Check */ SELECT 1"

  # the minimum number of connections to keep open
  minSize: 8

  # the maximum number of connections to keep open
  maxSize: 32

  # whether or not idle connections should be validated
  checkConnectionWhileIdle: false
  
assets:
  overrides:
    /images: /home/whatshappening/uploads
    /static: src/main/resources/assets/
  mimeTypes:
    jpg: image/jpg
    png: image/png
    html: text/html

